
// Entités (constructeur, getter/setter) et iDAO (méthodes) gérées par Lilia
id"LivreDAO & Livre
	ajouterLivre()
	afficherLivre()
	rechercherLivreparGenre()
	rechercherLivreparTheme()
	rechercherLivreparAuteur()
	rechercherLivreparTitre()
	rechercherLivreparMotCle()
	rechercherLivreparIsbn()
	rechercherLivreparQuantite()	
	rechercherLivreparPrixTTC()
	modifierLivre()
	supprimerLivre()


iEditeurDAO & Editeur
	ajouterEditeur()
	afficherEditeur()
	rechercherEditeur()
	modifierEditeur()
	supprimerEditeur()
	

iAuteurDAO & Auteur
	ajouterAuteur()
	afficherAuteur()
	rechercherAuteur()
	modifierAuteur()
	supprimerAuteur()

iMotCleDAO & MotCle
	ajouterMotCle()
	afficherMotCle()
	rechercherMotCle()
	modifierMotCle()
	supprimerMotCle()


// Entités (constructeur, getter/setter) et iDAO (méthodes) gérées par Marine
iThemeDAO & Theme
	ajouterTheme()
	afficherTheme()
	rechercherTheme()
	modifierTheme()
	supprimerTheme()


iEvenementDAO & Evenement
	ajouterEvenement()
	afficherEvenement()
	rechercherEvenement()
	rechercherEvenementparDate()
	modifierEvenement()
	supprimerEvenement()


iEmployeDAO & Employe
	authentification()
	ajouterEmploye()
	afficherEmploye()
	rechercherEmploye()
	rechercherEmployeparDroitDacces()
	modifierEmploye()
	supprimerEmploye()
	

iCommentaireDAO & Commentaire
	afficherCommentaire()
	rechercherCommentaireparStatut()
	rechercherCommentaireparClient()
	rechercherCommentaireparLivre()
	modifierCommentaire()
	supprimerCommentaire()


// Entités (constructeur, getter/setter) et iDAO (méthodes) gérées par Sidonie
iGenreDAO & Genre // Ok Sid
	public void ajouterGenre(Genre genre) throws SQLException;
	public void modifierGenre(String genreNom) throws SQLException;
	public Vector<String> vectorListGenre() throws SQLException;
	public DefaultTableModel listeGenre() throws SQLException;
	public Genre findGenreByNom(String genreNom) throws SQLException;
	public void supprimerGenre() throws SQLException;


iClientDAO & Client // Ok Sid
	public void ajouterClient(Client clt) throws SQLException;
	public void modifierClient(Client clt) throws SQLException;
	public Vector<String> vectorListClient() throws SQLException;
	public DefaultTableModel listeClient() throws SQLException;
	public Client findClientByLogin(String clientLogin) throws SQLException;
	public Client findClientByNom(String clientNom) throws SQLException;


iCommandeDAO & Commande
	ajouterCommande()
	afficherCommande()
	rechercherCommandeparClient()
	rechercherCommandeparCommande()
	rechercherCommandeparLivre()
	rechercherCommandeparStatut()
	rechercherCommandeparDate()
	modifierCommande()


iLigneCommandeDAO & LigneCommande
	ajouterLigneCommande()
	affichereLigneCommande()

